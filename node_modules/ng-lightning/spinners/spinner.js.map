{"version":3,"sources":["../../../temp/inline/spinners/spinner.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,uBAAA,EAAyB,WAAA,EAAY,MAAM,eAAA,CAAgB;AACrF,OAAO,EAAA,SAAE,EAAS,MAAM,cAAA,CAAe;AAGvC;IAAA;QACG,SAAI,GAAiC,QAAQ,CAAC;QAGvC,eAAU,GAAG,KAAK,CAAC;IAyB7B,CAAC;IAxBE,sBAAI,oCAAY;aAAhB;YACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;;;OAAA;IACA,sBAAI,iCAAS;aAAb,UAAc,SAA2B;YACxC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;QACzC,CAAC;;;OAAA;IACI,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,kPAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,yBAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,8BAA8B,EAAG,EAAE,EAAE;QAClF,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC9B,CAAC;IACF,iBAAC;CA7BD,AA6BC,IAAA;SA7BY,UAAU;AA6BtB,CAZC","file":"spinner.js","sourceRoot":"","sourcesContent":["import {Component, Input, ChangeDetectionStrategy, HostBinding} from '@angular/core';\nimport {toBoolean} from '../util/util';\n\n\nexport class NglSpinner {\n   size: 'small' | 'medium' | 'large' = 'medium';\n   type: 'brand' |  'inverse';\n\n  private _container = false;\n   get hasContainer() {\n    return this._container;\n  }\n   set container(container: string | boolean) {\n    this._container = toBoolean(container);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngl-spinner',\n  template: `\n    <div class=\"slds-spinner\" [ngClass]=\"['slds-spinner--' + size, type ? 'slds-spinner--' + type : '']\" aria-hidden=\"false\" role=\"alert\"><div class=\"slds-spinner__dot-a\"></div><div class=\"slds-spinner__dot-b\"></div></div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'size': [{ type: Input },],\n'type': [{ type: Input },],\n'hasContainer': [{ type: HostBinding, args: ['class.slds-spinner_container', ] },],\n'container': [{ type: Input },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}