{"version":3,"sources":["../../../temp/inline/paginations/pagination.ts"],"names":[],"mappings":"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","file":"pagination.js","sourceRoot":"","sourcesContent":["import {Component, EventEmitter, Input, Output, OnChanges, ChangeDetectionStrategy} from '@angular/core';\nimport {toBoolean} from '../util/util';\n\nexport type NglPage = { number: number | string, disabled?: boolean };\n\n\nexport class NglPagination implements OnChanges {\n\n  pages: NglPage[] = [];\n\n  current: number;\n   set page(page: number | string) {\n    this.current = +page;\n  }\n   pageChange = new EventEmitter<number>();\n\n   total: number | string;\n   perPage: number | string = 10;\n   limit: number | string = 0;\n   boundaryNumbers: number = 0;\n   firstText = 'First';\n   previousText = 'Previous';\n   nextText = 'Next';\n   lastText = 'Last';\n\n   set boundaryLinks(boundaryLinks: string | boolean) {\n    this._boundaryLinks = toBoolean(boundaryLinks);\n  }\n  get boundaryLinks() {\n    return this._boundaryLinks;\n  }\n\n  private totalPages: number;\n  private _boundaryLinks = false;\n\n  hasPrevious() {\n    return this.current > 1;\n  }\n\n  hasNext() {\n    return this.current < this.totalPages;\n  }\n\n  goto(page: number) {\n    if (page === this.current) return;\n    this.pageChange.emit(+page);\n  }\n\n  ngOnChanges(changes?: any) {\n    this.totalPages = Math.ceil(+this.total / +this.perPage);\n\n    const { start, end } = this.limits();\n\n    this.pages = this.getPageArray(start, end);\n\n    if (this.boundaryNumbers > 0) {\n      if (start > 1) {\n        const preGap = this.getPageArray(1, Math.min(start - 1, this.boundaryNumbers));\n        const lastGapNumber = +preGap[preGap.length - 1].number;\n        if (lastGapNumber < start - 1) {\n          this.pages.unshift(this.getGapPage(lastGapNumber, start));\n        }\n        this.pages.unshift(...preGap);\n      }\n\n      if (end < this.totalPages) {\n        const postGap = this.getPageArray(Math.max(this.totalPages - this.boundaryNumbers + 1, end + 1), this.totalPages);\n        const firstGapNumber = +postGap[0].number;\n        if (firstGapNumber > end + 1) {\n          this.pages.push(this.getGapPage(end, firstGapNumber));\n        }\n        this.pages.push(...postGap);\n      }\n    }\n\n    if (this.current > this.totalPages) {\n      setTimeout(() => this.goto(this.totalPages));\n    } else if (!this.current && this.totalPages > 0) {\n      setTimeout(() => this.goto(1));\n    }\n  }\n\n  pageTrackBy(index: number, page: NglPage) {\n    return page.number;\n  }\n\n  get start(): number {\n    return Math.min(Math.max(1 + (+this.current - 1) * +this.perPage, 0), +this.total);\n  }\n\n  get end(): number {\n    return Math.min(this.start + (+this.perPage - 1), +this.total);\n  }\n\n  private getPageArray(start: number, end: number) {\n    return Array.apply(null, {length: end - start + 1}).map((value: any, index: number) => this.getPage(start + index));\n  }\n\n  private getPage(number: string | number, disabled = false): NglPage {\n    return { number, disabled };\n  }\n\n  private getGapPage(before: number, after: number) {\n    const isConsecutive = before + 1 === after - 1;\n    return this.getPage(isConsecutive ? before + 1 : '...', !isConsecutive);\n  }\n\n  /**\n   * Calculate first and last visible page numbers\n   */\n  private limits() {\n    let start = 1, end = this.totalPages;\n\n    if (this.limit < 1) return {start, end};\n\n    // Current page is displayed in the middle of the visible ones\n    start = Math.max(+this.current - Math.floor(+this.limit / 2), 1);\n    end = start + +this.limit - 1;\n\n    // Adjust if limit is exceeded\n    if (end > this.totalPages) {\n      end = this.totalPages;\n      start = Math.max(end - +this.limit + 1, 1);\n    }\n\n    return {start, end};\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngl-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"slds-button-group\" role=\"group\"><button class=\"slds-button slds-button--neutral\" *ngIf=\"boundaryLinks\" [disabled]=\"!hasPrevious()\" (click)=\"goto(1)\">{{firstText}}</button><button class=\"slds-button slds-button--neutral\" [disabled]=\"!hasPrevious()\" (click)=\"goto(current - 1)\">{{previousText}}</button><button class=\"slds-button\" *ngFor=\"let page of pages; trackBy:pageTrackBy\" [ngClass]=\"'slds-button--' + (page.number === current ? 'brand' : 'neutral')\" (click)=\"goto(page.number)\" [disabled]=\"page.disabled\">{{page.number}}</button><button class=\"slds-button slds-button--neutral\" [disabled]=\"!hasNext()\" (click)=\"goto(current + 1)\">{{nextText}}</button><button class=\"slds-button slds-button--neutral\" *ngIf=\"boundaryLinks\" [disabled]=\"!hasNext()\" (click)=\"goto(totalPages)\">{{lastText}}</button></div>\n  `,\n  exportAs: 'nglPagination',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'page': [{ type: Input },],\n'pageChange': [{ type: Output },],\n'total': [{ type: Input },],\n'perPage': [{ type: Input },],\n'limit': [{ type: Input },],\n'boundaryNumbers': [{ type: Input },],\n'firstText': [{ type: Input },],\n'previousText': [{ type: Input },],\n'nextText': [{ type: Input },],\n'lastText': [{ type: Input },],\n'boundaryLinks': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}