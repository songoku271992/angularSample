import { Component, Input, ChangeDetectorRef, ContentChild, ContentChildren, ElementRef, Renderer2, HostBinding, Output, EventEmitter } from '@angular/core';
import { NglDatatableColumn } from './column';
import { NglDatatableLoadingOverlay, NglDatatableNoRowsOverlay } from './overlays';
;
;
var NglDatatable = (function () {
    function NglDatatable(detector, element, renderer) {
        var _this = this;
        this.detector = detector;
        this.data = [];
        this.bordered = true;
        this.striped = true;
        this.sortChange = new EventEmitter();
        this.loading = false;
        this.onRowClick = new EventEmitter();
        this.dataTrackBy = function (index, data) {
            return _this.trackByKey ? data[_this.trackByKey] : index;
        };
        renderer.addClass(element.nativeElement, 'slds-table');
    }
    Object.defineProperty(NglDatatable.prototype, "showLoading", {
        get: function () {
            return this.loading && this.loadingOverlay;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NglDatatable.prototype, "hasRows", {
        get: function () {
            return this.data && this.data.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    NglDatatable.prototype.columnTrackBy = function (index, column) {
        return column.key || index;
    };
    NglDatatable.prototype.onColumnSort = function (column, order) {
        var key = column.key;
        if (!key) {
            throw new Error("ng-lightning: No \"key\" property is set for sortable column \"" + column.heading + "\"");
        }
        this.sortChange.emit({ key: key, order: order });
    };
    NglDatatable.prototype.getColumnSortOrder = function (column) {
        return this.sort && column.key === this.sort.key ? this.sort.order : null;
    };
    NglDatatable.prototype.rowClick = function (event, data) {
        this.onRowClick.emit({ event: event, data: data });
    };
    NglDatatable.prototype.ngAfterContentInit = function () {
        var _this = this;
        this._columnsSubscription = this.columns.changes.subscribe(function () { return _this.detector.markForCheck(); });
    };
    NglDatatable.prototype.ngOnDestroy = function () {
        this._columnsSubscription.unsubscribe();
    };
    NglDatatable.decorators = [
        { type: Component, args: [{
                    selector: 'table[ngl-datatable]',
                    template: "\n    <thead><tr class=\"slds-text-title--caps\"><th *ngFor=\"let col of columns; trackBy:columnTrackBy\" ngl-internal-datatatable-head [heading]=\"col.heading\" [headingTpl]=\"col.headingTpl?.templateRef\" [sortable]=\"col.sortable\" [sortOrder]=\"getColumnSortOrder(col)\" (onSort)=\"onColumnSort(col, $event)\" [ngClass]=\"col.headClass\"></th></tr></thead><tbody><tr *ngIf=\"!hasRows\"><td [attr.colspan]=\"columns.length\"><ng-template [ngTemplateOutlet]=\"noRowsOverlay?.templateRef\"></ng-template></td></tr><ng-template ngIf=\"hasRows\"><tr *ngFor=\"let d of data; let i = index; trackBy:dataTrackBy\" (click)=\"rowClick($event, d)\"><td *ngFor=\"let col of columns; trackBy:columnTrackBy\" [ngClass]=\"col.cellClass\" ngl-internal-datatatable-cell [row]=\"d\" [column]=\"col\" [index]=\"i\"></td></tr></ng-template></tbody><div class=\"ngl-datatable-loading slds-grid slds-grid--vertical-align-center slds-grid--align-center\" *ngIf=\"showLoading\"><ng-template [ngTemplateOutlet]=\"loadingOverlay.templateRef\"></ng-template></div>\n  ",
                    host: {
                        '[class.slds-is-relative]': 'loading',
                    },
                    styles: ["\n    .ngl-datatable-loading {\n      position: absolute;\n      z-index: 1;\n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(255, 255, 255, 0.5)\n    }\n  "],
                },] },
    ];
    /** @nocollapse */
    NglDatatable.ctorParameters = function () { return [
        { type: ChangeDetectorRef, },
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    NglDatatable.propDecorators = {
        'data': [{ type: Input },],
        'trackByKey': [{ type: Input },],
        'bordered': [{ type: HostBinding, args: ['class.slds-table--bordered',] }, { type: Input },],
        'striped': [{ type: HostBinding, args: ['class.slds-table--striped',] }, { type: Input },],
        'sort': [{ type: Input },],
        'sortChange': [{ type: Output },],
        'loading': [{ type: Input },],
        'loadingOverlay': [{ type: ContentChild, args: [NglDatatableLoadingOverlay,] },],
        'noRowsOverlay': [{ type: ContentChild, args: [NglDatatableNoRowsOverlay,] },],
        'columns': [{ type: ContentChildren, args: [NglDatatableColumn,] },],
        'onRowClick': [{ type: Output },],
    };
    return NglDatatable;
}());
export { NglDatatable };
;
//# sourceMappingURL=datatable.js.map