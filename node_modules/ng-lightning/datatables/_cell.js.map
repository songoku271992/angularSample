{"version":3,"sources":["../../../temp/inline/datatables/_cell.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,uBAAA,EAAyB,KAAA,EAAO,WAAA,EAAuB,MAAM,eAAA,CAAgB;AAIhG;IAAA;IA0CA,CAAC;IApCC,sBAAI,+CAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QAC7B,CAAC;;;OAAA;IAID,8CAAW,GAAX,UAAY,OAAa;QACvB,IAAI,CAAC,OAAO,GAAI;YACd,SAAS,EAAE,IAAI,CAAC,KAAK;YACrB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;IACJ,CAAC;IAED,sBAAI,2CAAK;aAAT;YACU,IAAA,qBAAG,CAAiB;YAC5B,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC;QACtC,CAAC;;;OAAA;IACI,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,mCAAmC;oBAC7C,QAAQ,EAAE,0MAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,uCAAc,GAA2C;QAChE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACzB,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,iBAAiB,EAAG,EAAE,EAAE;KACjE,CAAC;IACF,+BAAC;CA1CD,AA0CC,IAAA;SA1CY,wBAAwB","file":"_cell.js","sourceRoot":"","sourcesContent":["import {Component, ChangeDetectionStrategy, Input, HostBinding, OnChanges} from '@angular/core';\nimport {NglDatatableColumn} from './column';\n\n\nexport class NglInternalDatatableCell implements OnChanges {\n   row: any;\n   column: NglDatatableColumn;\n   index: number;\n\n  \n  get dataLabel() {\n    return this.column.heading;\n  }\n\n  context: any;\n\n  ngOnChanges(changes?: any) {\n    this.context =  {\n      $implicit: this.value,\n      row: this.row,\n      index: this.index,\n    };\n  }\n\n  get value() {\n    const { key } = this.column;\n    return key ? this.row[ key ] : null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'td[ngl-internal-datatatable-cell]',\n  template: `\n    <ng-template *ngIf=\"column.cellTpl\" [ngTemplateOutlet]=\"column.cellTpl.templateRef\" [ngTemplateOutletContext]=\"context\"></ng-template><span *ngIf=\"!column.cellTpl\">{{ value }}</span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'row': [{ type: Input },],\n'column': [{ type: Input },],\n'index': [{ type: Input },],\n'dataLabel': [{ type: HostBinding, args: ['attr.data-label', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}