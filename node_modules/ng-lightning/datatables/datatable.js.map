{"version":3,"sources":["../../../temp/inline/datatables/datatable.ts"],"names":[],"mappings":"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","file":"datatable.js","sourceRoot":"","sourcesContent":["import {Component, Input, ChangeDetectorRef, ContentChild, ContentChildren, QueryList, ElementRef, Renderer2, HostBinding, Output, EventEmitter} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {NglDatatableColumn} from './column';\nimport {NglDatatableLoadingOverlay, NglDatatableNoRowsOverlay} from './overlays';\n\nexport interface INglDatatableSort {\n  key: string;\n  order: 'asc' | 'desc';\n};\n\nexport interface INglDatatableRowClick {\n  event: Event;\n  data: any;\n};\n\n\nexport class NglDatatable {\n\n   data: any[] = [];\n   trackByKey: string;\n\n  \n   bordered = true;\n\n  \n   striped = true;\n\n   sort: INglDatatableSort;\n   sortChange = new EventEmitter<INglDatatableSort>();\n\n   loading: boolean = false;\n   loadingOverlay: NglDatatableLoadingOverlay;\n  get showLoading() {\n    return this.loading && this.loadingOverlay;\n  }\n\n   noRowsOverlay: NglDatatableNoRowsOverlay;\n\n  get hasRows() {\n    return this.data && this.data.length > 0;\n  }\n\n   columns: QueryList<NglDatatableColumn>;\n\n   onRowClick = new EventEmitter<INglDatatableRowClick>();\n\n  private _columnsSubscription: Subscription;\n\n  constructor(private detector: ChangeDetectorRef, element: ElementRef, renderer: Renderer2) {\n    renderer.addClass(element.nativeElement, 'slds-table');\n  }\n\n  columnTrackBy(index: number, column: NglDatatableColumn) {\n    return column.key || index;\n  }\n\n  dataTrackBy = (index: number, data: any) => {\n    return this.trackByKey ? data[this.trackByKey] : index;\n  }\n\n  onColumnSort(column: NglDatatableColumn, order: 'asc' | 'desc') {\n    const key = column.key;\n    if (!key) {\n      throw new Error(`ng-lightning: No \"key\" property is set for sortable column \"${column.heading}\"`);\n    }\n    this.sortChange.emit({key, order});\n  }\n\n  getColumnSortOrder(column: NglDatatableColumn) {\n    return this.sort && column.key === this.sort.key ? this.sort.order : null;\n  }\n\n  rowClick(event: Event, data: any) {\n    this.onRowClick.emit({ event, data });\n  }\n\n  ngAfterContentInit() {\n    this._columnsSubscription = this.columns.changes.subscribe(() => this.detector.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._columnsSubscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table[ngl-datatable]',\n  template: `\n    <thead><tr class=\"slds-text-title--caps\"><th *ngFor=\"let col of columns; trackBy:columnTrackBy\" ngl-internal-datatatable-head [heading]=\"col.heading\" [headingTpl]=\"col.headingTpl?.templateRef\" [sortable]=\"col.sortable\" [sortOrder]=\"getColumnSortOrder(col)\" (onSort)=\"onColumnSort(col, $event)\" [ngClass]=\"col.headClass\"></th></tr></thead><tbody><tr *ngIf=\"!hasRows\"><td [attr.colspan]=\"columns.length\"><ng-template [ngTemplateOutlet]=\"noRowsOverlay?.templateRef\"></ng-template></td></tr><ng-template ngIf=\"hasRows\"><tr *ngFor=\"let d of data; let i = index; trackBy:dataTrackBy\" (click)=\"rowClick($event, d)\"><td *ngFor=\"let col of columns; trackBy:columnTrackBy\" [ngClass]=\"col.cellClass\" ngl-internal-datatatable-cell [row]=\"d\" [column]=\"col\" [index]=\"i\"></td></tr></ng-template></tbody><div class=\"ngl-datatable-loading slds-grid slds-grid--vertical-align-center slds-grid--align-center\" *ngIf=\"showLoading\"><ng-template [ngTemplateOutlet]=\"loadingOverlay.templateRef\"></ng-template></div>\n  `,\n  host: {\n    '[class.slds-is-relative]': 'loading',\n  },\n  styles: [`\n    .ngl-datatable-loading {\n      position: absolute;\n      z-index: 1;\n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(255, 255, 255, 0.5)\n    }\n  `],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'trackByKey': [{ type: Input },],\n'bordered': [{ type: HostBinding, args: ['class.slds-table--bordered', ] },{ type: Input },],\n'striped': [{ type: HostBinding, args: ['class.slds-table--striped', ] },{ type: Input },],\n'sort': [{ type: Input },],\n'sortChange': [{ type: Output },],\n'loading': [{ type: Input },],\n'loadingOverlay': [{ type: ContentChild, args: [NglDatatableLoadingOverlay, ] },],\n'noRowsOverlay': [{ type: ContentChild, args: [NglDatatableNoRowsOverlay, ] },],\n'columns': [{ type: ContentChildren, args: [NglDatatableColumn, ] },],\n'onRowClick': [{ type: Output },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}