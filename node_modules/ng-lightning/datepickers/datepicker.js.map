{"version":3,"sources":["../../../temp/inline/datepickers/datepicker.ts"],"names":[],"mappings":"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","file":"datepicker.js","sourceRoot":"","sourcesContent":["import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, HostListener} from '@angular/core';\nimport {uniqueId, toBoolean} from '../util/util';\n\nexport type NglInternalDate = { year: number, month: number, day: number, disabled?: boolean};\n\n\nexport class NglDatepicker {\n   monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n   dayNamesShort = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n   dayNamesLong = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursda', 'Friday', 'Saturday'];\n\n  date: NglInternalDate;\n  current: NglInternalDate;\n   set _date(date: Date) {\n    this.date = this.parseDate(date);\n    if (this.date) {\n      this.current = Object.assign({}, this.date);\n    }\n    this.render();\n  }\n   dateChange = new EventEmitter();\n\n  showToday = true;\n   set _showToday(showToday: boolean) {\n    this.showToday = toBoolean(showToday);\n  }\n\n  firstDayOfWeek = 0;\n   set _firstDayOfWeek(firstDayOfWeek: number) {\n    this.firstDayOfWeek = +firstDayOfWeek;\n    this.render();\n  }\n\n  weeks: NglInternalDate[];\n  uid = uniqueId('datepicker');\n  monthLabel: string;\n\n  moveYear(year: string | number) {\n    this.current.year = +year;\n    this.render();\n  }\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  keyboardHandler($event: KeyboardEvent, code: string, param?: number | string) {\n    if ($event) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    if (code === 'Enter') {\n      this.select();\n      return;\n    }\n\n    // Change current date\n    let {year, month, day} = this.current;\n    const date = new Date(year, month, day, 12);\n\n    if (code === 'Move') {\n      date.setDate(day + (+param));\n      this.current = { year: date.getFullYear(), month: date.getMonth(), day: date.getDate() };\n    } else if (code === 'MoveMonth') {\n      date.setMonth(month + (+param), 1);\n      this.current = { year: date.getFullYear(), month: date.getMonth(), day };\n    } else if (code === 'MoveTo') {\n      this.current.day = +param;\n    }\n    this.render();\n  }\n\n  isSelected(date: NglInternalDate) {\n    return this.isEqualDate(date, this.date);\n  }\n\n  isActive(date: NglInternalDate) {\n    return this.isEqualDate(date, this.current);\n  }\n\n  select(date: NglInternalDate = this.current) {\n    if (date.disabled) return;\n\n    const {year, month, day} = date;\n    this.dateChange.emit(new Date(year, month, day));\n  }\n\n  indexTrackBy(index: number) {\n    return index;\n  }\n\n  selectToday() {\n    this.dateChange.emit(new Date());\n  }\n\n  private parseDate(date: Date): NglInternalDate {\n    if (!date) return null;\n    return { year: date.getFullYear(), month: date.getMonth(), day: date.getDate() };\n  }\n\n  private isEqualDate(d1: NglInternalDate, d2: NglInternalDate) {\n    return d1 && d2 && d1.day === d2.day && d1.month === d2.month && d1.year === d2.year;\n  }\n\n  private render() {\n    if (!this.current) {\n      this.current = this.today;\n    }\n\n    const { year, month, day } = this.current;\n    this.monthLabel = this.monthNames[month];\n\n    const days = this.daysInMonth(year, month);\n\n    // Keep current day inside limits of this month\n    this.current.day = Math.min(day, days.length);\n\n    Array.prototype.unshift.apply(days, this.daysInPreviousMonth(year, month));\n    const nextMonth = this.daysInNextMonth(year, month + 1, days.length);\n    if (nextMonth) {\n      Array.prototype.push.apply(days, nextMonth);\n    }\n\n    this.weeks = this.split(days);\n  }\n\n  private daysInMonth(year: number, month: number) {\n    const last = new Date(year, month + 1, 0).getDate();\n    return this.getDayObjects(year, month, 1, last);\n  }\n\n  private daysInPreviousMonth(year: number, month: number) {\n    const firstIndex = (new Date(year, month, 1)).getDay();\n    const last = new Date(year, month, 0).getDate();\n    const numDays = (7 + firstIndex - this.firstDayOfWeek) % 7;\n\n    return this.getDayObjects(year, month - 1, last - numDays + 1, last, true);\n  }\n\n  private daysInNextMonth(year: number, month: number, numOfDays: number) {\n    if (numOfDays % 7 === 0) return;\n    return this.getDayObjects(year, month, 1, 7 - (numOfDays % 7), true);\n  }\n\n  private getDayObjects(year: number, month: number, from: number, to: number, disabled = false) {\n    const days: NglInternalDate[] = [];\n    for (let day = from; day <= to; day++) {\n      days.push({ year, month, day, disabled });\n    }\n    return days;\n  }\n\n  private get today() {\n    const today = new Date();\n    return { year: today.getFullYear(), month: today.getMonth(), day: today.getDate() };\n  }\n\n  // Split array into smaller arrays\n  private split = function(arr: any[], size = 7) {\n    const arrays: any[] = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  };\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngl-datepicker',\n  template: `\n    <div class=\"slds-datepicker__filter slds-grid\"><div class=\"slds-datepicker__filter--month slds-grid slds-grid--align-spread slds-grow\"><div class=\"slds-align-middle\"><button class=\"slds-button slds-button--icon-container\" type=\"button\" (click)=\"keyboardHandler($event, 'MoveMonth', -1)\"><svg class=\"slds-button__icon slds-button__icon--small\" nglIcon=\"left\"></svg><span class=\"slds-assistive-text\">Previous Month</span></button></div><h2 class=\"slds-align-middle\" [id]=\"uid + '_month'\" aria-live=\"assertive\" aria-atomic=\"true\">{{ monthLabel }}</h2><div class=\"slds-align-middle\"><button class=\"slds-button slds-button--icon-container\" type=\"button\" (click)=\"keyboardHandler($event, 'MoveMonth', 1)\"><svg class=\"slds-button__icon slds-button__icon--small\" nglIcon=\"right\"></svg><span class=\"slds-assistive-text\">Next Month</span></button></div></div><ngl-date-year class=\"slds-shrink-none\" [year]=\"current.year\" (yearChange)=\"moveYear($event)\"></ngl-date-year></div><table class=\"datepicker__month\" role=\"grid\" [attr.aria-labelledby]=\"uid + '_month'\"><thead><tr nglWeekdays [firstDayOfWeek]=\"firstDayOfWeek\" [dayNamesShort]=\"dayNamesShort\" [dayNamesLong]=\"dayNamesLong\"></tr></thead><tbody><tr *ngFor=\"let week of weeks; trackBy:indexTrackBy\"><td *ngFor=\"let date of week\" (click)=\"select(date)\" [class.slds-is-today]=\"isActive(date)\" [nglDay]=\"date.day\" [nglDaySelected]=\"isSelected(date)\" [nglDayDisabled]=\"date.disabled\"></td></tr><tr *ngIf=\"showToday\"><td colspan=\"7\" role=\"gridcell\"><a class=\"slds-show--inline-block slds-p-bottom--x-small\" href=\"javascript:void(0)\" (click)=\"selectToday()\">Today</a></td></tr></tbody></table>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'aria-hidden': 'false',\n    '[class.slds-datepicker]': 'true',\n    'tabindex': '0',\n  },\n  styles: [`:host { display: block; }`],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'monthNames': [{ type: Input },],\n'dayNamesShort': [{ type: Input },],\n'dayNamesLong': [{ type: Input },],\n'_date': [{ type: Input, args: ['date', ] },],\n'dateChange': [{ type: Output },],\n'_showToday': [{ type: Input, args: ['showToday', ] },],\n'_firstDayOfWeek': [{ type: Input, args: ['firstDayOfWeek', ] },],\n'keyboardHandler': [{ type: HostListener, args: ['keydown.Enter', ['$event', '\"Enter\"'], ] },{ type: HostListener, args: ['keydown.ArrowUp', ['$event', '\"Move\"', '-7'], ] },{ type: HostListener, args: ['keydown.ArrowLeft', ['$event', '\"Move\"', '-1'], ] },{ type: HostListener, args: ['keydown.ArrowDown', ['$event', '\"Move\"', '7'], ] },{ type: HostListener, args: ['keydown.ArrowRight', ['$event', '\"Move\"', '1'], ] },{ type: HostListener, args: ['keydown.PageUp', ['$event', '\"MoveMonth\"', '-1'], ] },{ type: HostListener, args: ['keydown.PageDown', ['$event', '\"MoveMonth\"', '1'], ] },{ type: HostListener, args: ['keydown.Home', ['$event', '\"MoveTo\"', '1'], ] },{ type: HostListener, args: ['keydown.End', ['$event', '\"MoveTo\"', '31'], ] },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}