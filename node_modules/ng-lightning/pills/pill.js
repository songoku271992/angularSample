import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';
var NglPill = (function () {
    function NglPill(detector) {
        this.detector = detector;
        this.unlinked = true;
        this.nglPillRemove = new EventEmitter();
    }
    NglPill.prototype.remove = function () {
        this.nglPillRemove.emit(null);
    };
    NglPill.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-pill',
                    template: "\n    <ng-content select=\"[nglPillImage]\"></ng-content><ng-content select=\"a\"></ng-content><span class=\"slds-pill__label\" *ngIf=\"unlinked\"><ng-content></ng-content></span><button class=\"slds-button slds-button--icon slds-pill__remove\" *ngIf=\"removable\" type=\"button\" (click)=\"remove()\"><svg class=\"slds-button__icon\" nglIcon=\"close\"></svg></button>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.slds-pill]': 'true',
                    },
                },] },
    ];
    /** @nocollapse */
    NglPill.ctorParameters = function () { return [
        { type: ChangeDetectorRef, },
    ]; };
    NglPill.propDecorators = {
        'nglPillRemove': [{ type: Output },],
    };
    return NglPill;
}());
export { NglPill };
//# sourceMappingURL=pill.js.map