{"version":3,"sources":["../../../temp/inline/forms/form-label.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,WAAA,EAAY,MAAM,eAAA,CAAgB;AAGrD;IACE,8BAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;IAAG,CAAC;IAC/C,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,gBAAgB,EAAC,EAAG,EAAE;KAC1D,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,EAF6F,CAE7F,CAAC;IACF,2BAAC;CATD,AASC,IAAA;SATY,oBAAoB;AAWjC,MAAM,uBAPuB,KAAO,EAAQ,aAAe;IAQzD,EAAE,CAAC,CAAC,KAPC,CAAK;QAAC,MAAA,CAAO,KAAA,CAAM;IAQxB,MAAM,CAPC,aAAA,GAAgB,aAAA,CAAc,WAAC,GAAa,EAAA,CAAG;AAQxD,CAAC","file":"form-label.js","sourceRoot":"","sourcesContent":["import {Directive, TemplateRef} from '@angular/core';\n\n\nexport class NglFormLabelTemplate {\n  constructor(public templateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[nglFormLabel]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nexport function getFormLabel(label: string, labelTemplate: NglFormLabelTemplate): string | TemplateRef<any> {\n  if (label) return label;\n  return labelTemplate ? labelTemplate.templateRef : '';\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}