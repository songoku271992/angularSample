{"version":3,"sources":["../../../../temp/inline/forms/groups/group.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,uBAAA,EAAyB,WAAA,EAAa,YAAA,EAAqC,MAAM,eAAA,CAAgB;AAC3H,OAAO,EAAA,QAAE,EAAQ,MAAM,iBAAA,CAAkB;AACzC,OAAO,EAAA,oBAAE,EAAqB,YAAA,EAAa,MAAM,eAAA,CAAgB;AAGjE;IAAA;QAUE,QAAG,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;IAoC/B,CAAC;IAhCC,kCAAW,GAAX,UAAY,OAAa;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,yCAAkB,GAAlB;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,mCAAY,GAApB;QACE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,0BAA0B;oBACpC,QAAQ,EAAE,uUAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,IAAI,EAAE;wBACJ,2BAA2B,EAAE,MAAM;qBACpC;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,2BAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAE;QACjD,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,oBAAoB,EAAG,EAAE,EAAE;QACrE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,sBAAsB,EAAG,EAAE,EAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACnF,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC7B,CAAC;IACF,mBAAC;CA9CD,AA8CC,IAAA;SA9CY,YAAY;AA8CxB,CAZC","file":"group.js","sourceRoot":"","sourcesContent":["import {Component, Input, ChangeDetectionStrategy, HostBinding, ContentChild, TemplateRef, OnChanges} from '@angular/core';\nimport {uniqueId} from '../../util/util';\nimport {NglFormLabelTemplate, getFormLabel} from '../form-label';\n\n\nexport class NglFormGroup implements OnChanges {\n\n   labelStr: string;\n   labelTpl: NglFormLabelTemplate;\n\n  \n   error: string;\n\n   required: boolean;\n\n  uid = uniqueId('form_group');\n\n  _label: string | TemplateRef<any>;\n\n  ngOnChanges(changes?: any) {\n    this.setFormLabel();\n  }\n\n  ngAfterContentInit() {\n    this.setFormLabel();\n  }\n\n  private setFormLabel() {\n    this._label = getFormLabel(this.labelStr, this.labelTpl);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'fieldset[ngl-form-group]',\n  template: `\n    <legend class=\"slds-form-element__label\"><abbr class=\"slds-required\" *ngIf=\"required\" title=\"required\">*</abbr><span [nglInternalOutlet]=\"_label\"></span></legend><div class=\"slds-form-element__control\"><ng-content></ng-content></div><div class=\"slds-form-element__help\" *ngIf=\"error\">{{error}}</div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.slds-form-element]': 'true',\n  },\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'labelStr': [{ type: Input, args: ['label', ] },],\n'labelTpl': [{ type: ContentChild, args: [NglFormLabelTemplate, ] },],\n'error': [{ type: HostBinding, args: ['class.slds-has-error', ] },{ type: Input },],\n'required': [{ type: Input },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}