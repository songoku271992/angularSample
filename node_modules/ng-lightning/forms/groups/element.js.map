{"version":3,"sources":["../../../../temp/inline/forms/groups/element.ts"],"names":[],"mappings":"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","file":"element.js","sourceRoot":"","sourcesContent":["import {Component, Input, ChangeDetectionStrategy, ContentChild, Optional, ElementRef, Renderer2, TemplateRef, OnChanges} from '@angular/core';\nimport {NglFormGroupAlternate} from './group-alt';\nimport {NglFormCheckbox} from '../elements/input';\nimport {NglFormLabelTemplate, getFormLabel} from '../form-label';\nimport {uniqueId} from '../../util/util';\n\n\nexport class NglFormGroupElement implements OnChanges {\n   contentEl: NglFormCheckbox;\n\n   labelStr: string;\n   labelTpl: NglFormLabelTemplate;\n\n  _label: TemplateRef<any> | string;\n\n  uid = uniqueId('form_element');\n\n  get labelClass() {\n    return `slds-${this.contentEl.type}${this.groupAlt ? '--button' : ''}__label`;\n  }\n\n  constructor( private groupAlt: NglFormGroupAlternate, private element: ElementRef, private renderer: Renderer2) {}\n\n  ngOnChanges(changes?: any) {\n    this.setFormLabel();\n  }\n\n  ngAfterContentInit() {\n    if (!this.contentEl) {\n      throw Error(`Couldn't find an input radio or checkbox with [nglFormControl] attribute inside <ngl-form-group-element>`);\n    }\n\n    const { type } = this.contentEl;\n\n    if (this.groupAlt) {\n      this.groupAlt.type = type;\n      this.renderer.addClass(this.element.nativeElement, 'slds-button');\n      this.renderer.addClass(this.element.nativeElement, `slds-${type}--button`);\n    } else {\n      this.renderer.addClass(this.element.nativeElement, `slds-${type}`);\n    }\n\n    this.contentEl.id = this.uid;\n    this.setFormLabel();\n  }\n\n  private setFormLabel() {\n    this._label = getFormLabel(this.labelStr, this.labelTpl);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngl-form-group-element',\n  template: `\n    <ng-content></ng-content><label *ngIf=\"contentEl\" [ngClass]=\"labelClass\" [attr.for]=\"uid\" [ngSwitch]=\"!!groupAlt\"><ng-container *ngSwitchCase=\"false\"><span [ngClass]=\"'slds-' + contentEl.type + '--faux'\"></span><span class=\"slds-form-element__label\" [nglInternalOutlet]=\"_label\"></span></ng-container><ng-container *ngSwitchCase=\"true\"><span [ngClass]=\"'slds-' + contentEl.type + '--faux'\" [nglInternalOutlet]=\"_label\"></span></ng-container></label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NglFormGroupAlternate, decorators: [{ type: Optional }, ]},\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'contentEl': [{ type: ContentChild, args: [NglFormCheckbox, ] },],\n'labelStr': [{ type: Input, args: ['label', ] },],\n'labelTpl': [{ type: ContentChild, args: [NglFormLabelTemplate, ] },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}