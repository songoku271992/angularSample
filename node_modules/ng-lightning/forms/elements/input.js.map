{"version":3,"sources":["../../../../temp/inline/forms/elements/input.ts"],"names":[],"mappings":"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","file":"input.js","sourceRoot":"","sourcesContent":["import {Directive, HostBinding, Optional} from '@angular/core';\nimport {NglFormGroup} from '../groups/group';\nimport {NglFormGroupAlternate} from '../groups/group-alt';\n\n\n\nexport class NglFormInput {\n   id: string;\n   describedBy: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[nglFormControl]:not([type=checkbox]), input[nglFormControl]:not([type=radio])',\n  host: {\n    '[class.slds-input]': 'true',\n  },\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: HostBinding, args: ['id', ] },],\n'describedBy': [{ type: HostBinding, args: ['attr.aria-describedby', ] },],\n};\n};\n\n\nexport class NglFormTextarea {\n   id: string;\n   describedBy: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'textarea[nglFormControl]',\n  providers: [ {provide: NglFormInput, useExisting: NglFormTextarea} ],\n  host: {\n    '[class.slds-textarea]': 'true',\n  },\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: HostBinding, args: ['id', ] },],\n'describedBy': [{ type: HostBinding, args: ['attr.aria-describedby', ] },],\n};\n}\n\n\nexport class NglFormSelect {\n   id: string;\n   describedBy: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'select[nglFormControl]',\n  providers: [ {provide: NglFormInput, useExisting: NglFormSelect} ],\n  host: {\n    '[class.slds-select]': 'true',\n  },\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: HostBinding, args: ['id', ] },],\n'describedBy': [{ type: HostBinding, args: ['attr.aria-describedby', ] },],\n};\n}\n\n\nexport class NglFormCheckbox {\n  type = 'checkbox';\n\n  assistive: boolean = false;\n\n   id: string;\n   describedBy: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[nglFormControl][type=checkbox]',\n  host: {\n    '[class.slds-assistive-text]': 'assistive',\n  },\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: HostBinding, args: ['id', ] },],\n'describedBy': [{ type: HostBinding, args: ['attr.aria-describedby', ] },],\n};\n}\n\n\nexport class NglFormRadio {\n  type = 'radio';\n\n   id: string;\n   name: string;\n\n  constructor( formGroup: NglFormGroup,  formGroupAlt: NglFormGroupAlternate) {\n    this.name = `name_${(formGroup || formGroupAlt).uid}`;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[nglFormControl][type=radio]',\n  providers: [ {provide: NglFormCheckbox, useExisting: NglFormRadio} ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NglFormGroup, decorators: [{ type: Optional }, ]},\n{type: NglFormGroupAlternate, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: HostBinding, args: ['id', ] },],\n'name': [{ type: HostBinding, args: ['attr.name', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}