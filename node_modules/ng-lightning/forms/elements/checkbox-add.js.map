{"version":3,"sources":["../../../../temp/inline/forms/elements/checkbox-add.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,uBAAA,EAAyB,YAAA,EAAc,iBAAA,EAAoC,MAAM,eAAA,CAAgB;AAC3H,OAAO,EAAA,cAAE,EAAc,MAAM,WAAA,CAAY;AACzC,OAAO,EAAA,eAAE,EAAe,MAAM,SAAA,CAAU;AACxC,OAAO,EAAA,oBAAE,EAAoB,MAAM,eAAA,CAAgB;AAGnD;IAA+C,6CAAc;IAM3D,mCAAY,QAA2B;eACrC,kBAAM,QAAQ,CAAC;IACjB,CAAC;IAED,iBAAiB;IACjB,sDAAkB,GAAlB;QACE,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;QAChC,iBAAM,kBAAkB,WAAE,CAAC;IAC7B,CAAC;IACI,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,+KAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,IAAI,EAAE;wBACJ,mCAAmC,EAAE,MAAM;qBAC5C;oBACD,SAAS,EAAE,CAAE,EAAC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,yBAAyB,EAAC,CAAE;oBAChF,MAAM,EAAE,CAAC,2BAA2B,CAAC;iBACtC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;KAC1B,EAF6F,CAE7F,CAAC;IACK,wCAAc,GAA2C;QAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;QACjE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAE;QACjD,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,oBAAoB,EAAG,EAAE,EAAE;KACpE,CAAC;IACF,gCAAC;CAtCD,AAsCC,CAtC8C,cAAc,GAsC5D;SAtCY,yBAAyB;AAsCrC,CAZC","file":"checkbox-add.js","sourceRoot":"","sourcesContent":["import {Component, Input, ChangeDetectionStrategy, ContentChild, ChangeDetectorRef, AfterContentInit} from '@angular/core';\nimport {NglFormElement} from './element';\nimport {NglFormCheckbox} from './input';\nimport {NglFormLabelTemplate} from '../form-label';\n\n\nexport class NglFormElementCheckboxAdd extends NglFormElement implements AfterContentInit {\n   contentEl: NglFormCheckbox;\n\n   labelStr: string;\n   labelTpl: NglFormLabelTemplate;\n\n  constructor(detector: ChangeDetectorRef) {\n    super(detector);\n  }\n\n  // AoT workaround\n  ngAfterContentInit() {\n    this.contentEl.assistive = true;\n    super.ngAfterContentInit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngl-form-checkbox-add',\n  template: `\n    <ng-content></ng-content><label class=\"slds-checkbox--faux\" [attr.for]=\"uid\"><span class=\"slds-assistive-text\" [nglInternalOutlet]=\"_label\"></span></label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.slds-checkbox--add-button]': 'true',\n  },\n  providers: [ {provide: NglFormElement, useExisting: NglFormElementCheckboxAdd} ],\n  styles: [`:host { display: block; }`],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'contentEl': [{ type: ContentChild, args: [NglFormCheckbox, ] },],\n'labelStr': [{ type: Input, args: ['label', ] },],\n'labelTpl': [{ type: ContentChild, args: [NglFormLabelTemplate, ] },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}