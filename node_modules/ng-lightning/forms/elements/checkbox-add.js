var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, Input, ChangeDetectionStrategy, ContentChild, ChangeDetectorRef } from '@angular/core';
import { NglFormElement } from './element';
import { NglFormCheckbox } from './input';
import { NglFormLabelTemplate } from '../form-label';
var NglFormElementCheckboxAdd = (function (_super) {
    __extends(NglFormElementCheckboxAdd, _super);
    function NglFormElementCheckboxAdd(detector) {
        return _super.call(this, detector) || this;
    }
    // AoT workaround
    NglFormElementCheckboxAdd.prototype.ngAfterContentInit = function () {
        this.contentEl.assistive = true;
        _super.prototype.ngAfterContentInit.call(this);
    };
    NglFormElementCheckboxAdd.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-form-checkbox-add',
                    template: "\n    <ng-content></ng-content><label class=\"slds-checkbox--faux\" [attr.for]=\"uid\"><span class=\"slds-assistive-text\" [nglInternalOutlet]=\"_label\"></span></label>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.slds-checkbox--add-button]': 'true',
                    },
                    providers: [{ provide: NglFormElement, useExisting: NglFormElementCheckboxAdd }],
                    styles: [":host { display: block; }"],
                },] },
    ];
    /** @nocollapse */
    NglFormElementCheckboxAdd.ctorParameters = function () { return [
        { type: ChangeDetectorRef, },
    ]; };
    NglFormElementCheckboxAdd.propDecorators = {
        'contentEl': [{ type: ContentChild, args: [NglFormCheckbox,] },],
        'labelStr': [{ type: Input, args: ['label',] },],
        'labelTpl': [{ type: ContentChild, args: [NglFormLabelTemplate,] },],
    };
    return NglFormElementCheckboxAdd;
}(NglFormElement));
export { NglFormElementCheckboxAdd };
;
//# sourceMappingURL=checkbox-add.js.map