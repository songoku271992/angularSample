import { EventEmitter, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { NglRatingIconTemplate } from './icons';
import { NglConfig } from '../config/config';
export declare class NglRating {
    private config;
    private cd;
    range: number[];
    currentRate: number;
    icon: string;
    size: 'x-small' | 'small' | 'large';
    isReadonly: any;
    rate: number;
    defaultTemplate: TemplateRef<any>;
    iconTemplate: NglRatingIconTemplate;
    max: number | string;
    colorOn: string;
    colorOff: string;
    rateChange: EventEmitter<number>;
    hover: EventEmitter<number>;
    private _template;
    private _max;
    private readonly;
    private inputRate;
    constructor(config: NglConfig, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    nglOnConfigChanges(): void;
    update(value: number): void;
    enter(value: number): void;
    getFill(value: number): number;
    reset(): void;
    keyboardIncrease(evt: KeyboardEvent): void;
    keyboardDecrease(evt: KeyboardEvent): void;
    readonly ariaValuenow: number;
    private setRange();
}
