{"version":3,"sources":["../../../temp/inline/icons/icon.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,UAAA,EAAY,SAAA,EAAW,uBAAA,EAAyB,SAAA,EAAW,QAAA,EAAoB,MAAM,eAAA,CAAgB;AAC/H,OAAO,EAAA,SAAE,EAAU,YAAA,EAAa,MAAM,cAAA,CAAe;AACrD,OAAO,EAAA,SAAE,EAAS,MAAM,mBAAA,CAAoB;AAC5C,OAAO,EAAA,aAAE,EAAa,MAAM,wBAAA,CAAyB;AAKrD;IAuBE,iBAAmB,OAAmB,EAAS,QAAmB,EAC7C,KAAa,EACrB,MAAc,EACd,SAAoB,EAAG,aAA4B;QAH7C,YAAO,GAAP,OAAO,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAW;QAC7C,UAAK,GAAL,KAAK,CAAQ;QANlC,aAAQ,GAAoB,SAAS,CAAC;QAUpC,IAAI,CAAC,MAAM,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,SAAS,IAAI,aAAa,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QACnF,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,eAAa,KAAO,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IA9BA,sBAAI,4BAAO;aAAX,UAAY,IAAY;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC;;;OAAA;IACD,sBAAI,yBAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,GAAG,WAAS,IAAI,CAAC,KAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QACzE,CAAC;;;OAAA;IAEA,sBAAI,gCAAW;aAAf,UAAgB,QAAyB;YACxC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,SAAS,CAAC;QACxC,CAAC;;;OAAA;IAuBD,6BAAW,GAAX,UAAY,OAAa;QACf,IAAA,oCAAc,CAAU;QAChC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;QACzD,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;IACxC,CAAC;IAED,4BAAU,GAAV;QACE,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAa,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;QAE/F,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,mBAAmB,GAAG,WAAW,CAAC;QAC/D,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,6BAA6B,GAAG,MAAM,CAAC,CAAC;QAElE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,OAAO,CAAC,IAAI,CAAI,MAAM,UAAK,IAAI,CAAC,IAAM,CAAC,CAAC;QAC1C,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,OAAO,CAAC,IAAI,CAAC,oBAAkB,IAAI,CAAC,IAAM,CAAC,CAAC;QAC9C,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7B,OAAO,CAAC,IAAI,CAAC,yBAAsB,IAAI,CAAC,KAAK,IAAI,MAAM,CAAE,CAAC,CAAC;QAC7D,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,sBAAY,mCAAc;aAA1B;YACE,MAAM,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;kBAC7C,CAAC,qBAAqB,EAAE,eAAa,IAAI,CAAC,QAAQ,SAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAG,CAAC;kBACpF,IAAI,CAAC;QACjB,CAAC;;;OAAA;IACI,kBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,6LAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,sBAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,SAAS,GAAG;QACnB,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAG,EAAC;QACzE,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAG,EAAE,EAAG,EAAC;QAC1E,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;QACrD,EAAC,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;KACxD,EAP6F,CAO7F,CAAC;IACK,sBAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,MAAM,EAAG,EAAE,EAAE;QAC/C,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;QACvD,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACzB,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC7B,CAAC;IACF,cAAC;CA7FD,AA6FC,IAAA;SA7FY,OAAO;AA6FnB,CArBC","file":"icon.js","sourceRoot":"","sourcesContent":["import {Component, Input, ElementRef, Renderer2, ChangeDetectionStrategy, Attribute, Optional, OnChanges} from '@angular/core';\nimport {toBoolean, replaceClass} from '../util/util';\nimport {NglButton} from '../buttons/button';\nimport {NglButtonIcon} from '../buttons/button-icon';\n\nexport type NglIconCategory = 'action' | 'custom' | 'doctype' | 'standard' | 'utility';\n\n\nexport class NglIcon implements OnChanges {\n  _icon: string;\n   set setIcon(icon: string) {\n    this._icon = icon;\n  }\n  get icon() {\n    return this.category === 'custom' ? `custom${this._icon}` : this._icon;\n  }\n\n   set setCategory(category: NglIconCategory) {\n    this.category = category || 'utility';\n  }\n   type: 'default' | 'warning' | 'error';\n   align: 'left' | 'right';\n   size: 'x-small' | 'small' | 'large';\n   alt: string;\n   svgClass: string | string[];\n\n  category: NglIconCategory = 'utility';\n\n  private button: boolean;\n  private _containerClass: string[];\n\n  constructor(public element: ElementRef, public renderer: Renderer2,\n               private state: string,\n               button: string,\n               nglButton: NglButton,  nglButtonIcon: NglButtonIcon) {\n\n    this.button = button === null ? !!(nglButton || nglButtonIcon) : toBoolean(button);\n    if (state) {\n      renderer.addClass(element.nativeElement, `slds-text-${state}`);\n    }\n  }\n\n  ngOnChanges(changes?: any) {\n    const { containerClass } = this;\n    replaceClass(this, this._containerClass, containerClass);\n    this._containerClass = containerClass;\n  }\n\n  svgClasses() {\n    const classes = Array.isArray(this.svgClass) ? <string[]>this.svgClass : [this.svgClass || ''];\n\n    const prefix = this.button ? 'slds-button__icon' : 'slds-icon';\n    classes.push(this.state ? 'slds-button__icon--stateful' : prefix);\n\n    if (this.size) {\n      classes.push(`${prefix}--${this.size}`);\n    }\n\n    if (this.type) {\n      classes.push(`slds-icon-text-${this.type}`);\n    }\n\n    if (this.align || this.state) {\n      classes.push(`slds-button__icon--${this.align || 'left'}`);\n    }\n\n    return classes;\n  }\n\n  private get containerClass() {\n    return /^(action|custom|standard)$/.test(this.category)\n            ? ['slds-icon_container', `slds-icon-${this.category}-${this.icon.replace('_', '-')}`]\n            : null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngl-icon, [ngl-icon]',\n  template: `\n    <svg [nglIcon]=\"icon\" [nglIconCategory]=\"category\" [ngClass]=\"svgClasses()\"></svg><span class=\"slds-assistive-text\" *ngIf=\"alt\">{{alt}}</span><ng-content></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: undefined, decorators: [{ type: Attribute, args: ['state', ] }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['button', ] }, ]},\n{type: NglButton, decorators: [{ type: Optional }, ]},\n{type: NglButtonIcon, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'setIcon': [{ type: Input, args: ['icon', ] },],\n'setCategory': [{ type: Input, args: ['category', ] },],\n'type': [{ type: Input },],\n'align': [{ type: Input },],\n'size': [{ type: Input },],\n'alt': [{ type: Input },],\n'svgClass': [{ type: Input },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}