var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { NglConfig, NglConfigurable } from '../config/config';
var NglIconSvg = (function () {
    function NglIconSvg(config, cd) {
        this.config = config;
        this.cd = cd;
        this.category = 'utility';
        this.xPos = '0';
    }
    NglIconSvg.prototype.iconPath = function () {
        return this.config.get('svgPath') + "/" + this.category + "-sprite/svg/symbols.svg#" + this.icon;
    };
    NglIconSvg.decorators = [
        { type: Component, args: [{
                    selector: 'svg[nglIcon]',
                    template: "\n    <svg:use [attr.xlink:href]=\"iconPath()\" [attr.x]=\"xPos\"></svg:use>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[attr.aria-hidden]': 'true',
                    },
                },] },
    ];
    /** @nocollapse */
    NglIconSvg.ctorParameters = function () { return [
        { type: NglConfig, },
        { type: ChangeDetectorRef, },
    ]; };
    NglIconSvg.propDecorators = {
        'category': [{ type: Input, args: ['nglIconCategory',] },],
        'icon': [{ type: Input, args: ['nglIcon',] },],
        'xPos': [{ type: Input },],
    };
    NglIconSvg = __decorate([
        NglConfigurable()
    ], NglIconSvg);
    return NglIconSvg;
}());
export { NglIconSvg };
//# sourceMappingURL=svg.js.map