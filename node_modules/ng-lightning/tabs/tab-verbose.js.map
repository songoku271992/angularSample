{"version":3,"sources":["../../../temp/inline/tabs/tab-verbose.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,WAAA,EAAa,MAAA,EAAQ,YAAA,EAAc,YAAA,EAAa,MAAM,eAAA,CAAgB;AAChG,OAAO,EAAA,MAAE,EAAM,MAAM,OAAA,CAAQ;AAE7B;;;;;;;GAOG;AAEH;IACE,uBAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;IAAG,CAAC;IAC/C,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,mBAAmB,EAAC,EAAG,EAAE;KAC7D,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,EAF6F,CAE7F,CAAC;IACF,oBAAC;CATD,AASC,IAAA;SATY,aAAa;AAY1B;IACE,uBAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;IAAG,CAAC;IAC/C,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,mBAAmB,EAAC,EAAG,EAAE;KAC7D,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,EAF6F,CAE7F,CAAC;IACF,oBAAC;CATD,AASC,IAAA;SATY,aAAa;AAY1B;IAAmC,iCAAM;IAAzC;QAAA,qEAgCC;QA7BE,gBAAU,GAAG,IAAI,YAAY,EAAU,CAAC;QACxC,kBAAY,GAAG,IAAI,YAAY,EAAU,CAAC;;IA4B7C,CAAC;IAvBC,0CAAkB,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;IACtD,CAAC;IACI,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,SAAS;oBACnB,SAAS,EAAE,CAAE,EAAC,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,aAAa,EAAC,CAAE;iBAC7D,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,4BAAc,GAA2C;QAChE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;QAC9C,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACjC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACnC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,aAAa,EAAG,EAAE,EAAE;QACrE,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,aAAa,EAAG,EAAE,EAAE;KACpE,CAAC;IACF,oBAAC;CAhCD,AAgCC,CAhCkC,MAAM,GAgCxC;SAhCY,aAAa","file":"tab-verbose.js","sourceRoot":"","sourcesContent":["import {Directive, Input, TemplateRef, Output, EventEmitter, ContentChild} from '@angular/core';\nimport {NglTab} from './tab';\n\n/*\n * <ngl-tab [heading=\"...\"]>\n *    <ng-template ngl-tab-heading>...</ng-template>\n *    <ng-template ngl-tab-content>\n *       Content goes here...\n *    </ng-template>\n * </ngl-tab>\n */\n\nexport class NglTabHeading {\n  constructor(public templateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngl-tab-heading]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\n\nexport class NglTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngl-tab-content]'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\n\nexport class NglTabVerbose extends NglTab {\n   id: string;\n   heading: string | TemplateRef<any>;\n   onActivate = new EventEmitter<NglTab>();\n   onDeactivate = new EventEmitter<NglTab>();\n\n   contentTemplate: NglTabContent;\n   headingTemplate: NglTabHeading;\n\n  ngAfterContentInit() {\n    if (this.headingTemplate) {\n      this.heading = this.headingTemplate.templateRef;\n    }\n    this.templateRef = this.contentTemplate.templateRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngl-tab',\n  providers: [ {provide: NglTab, useExisting: NglTabVerbose} ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input, args: ['nglTabId', ] },],\n'heading': [{ type: Input },],\n'onActivate': [{ type: Output },],\n'onDeactivate': [{ type: Output },],\n'contentTemplate': [{ type: ContentChild, args: [NglTabContent, ] },],\n'headingTemplate': [{ type: ContentChild, args: [NglTabHeading, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}