{"version":3,"sources":["../../../temp/inline/tabs/tab.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,WAAA,EAAa,MAAA,EAAQ,YAAA,EAAc,QAAA,EAAS,MAAM,eAAA,CAAgB;AAE5F;;;;GAIG;AAEH;IAQE,gBAAoB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;QALhD,eAAU,GAAG,IAAI,YAAY,EAAU,CAAC;QACxC,iBAAY,GAAG,IAAI,YAAY,EAAU,CAAC;QAEnC,YAAO,GAAY,KAAK,CAAC;IAEmB,CAAC;IAErD,sBAAI,0BAAM;aAUV;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAZD,UAAW,MAAe;YACxB,EAAE,CAAC,CAAC,MAAM,KAAM,IAAI,CAAC,OAAO,CAAC;gBAAC,MAAM,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC;;;OAAA;IAKI,iBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,QAAQ;iBACnB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,qBAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;KACtD,EAF6F,CAE7F,CAAC;IACK,qBAAc,GAA2C;QAChE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;QAC9C,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACjC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAClC,CAAC;IACF,aAAC;CAvCD,AAuCC,IAAA;SAvCY,MAAM","file":"tab.js","sourceRoot":"","sourcesContent":["import {Directive, Input, TemplateRef, Output, EventEmitter, Optional} from '@angular/core';\n\n/*\n * <ng-template ngl-tab heading=\"...\">\n *    Content goes here...\n * </ng-template>\n */\n\nexport class NglTab {\n   id: string;\n   heading: string | TemplateRef<any>;\n   onActivate = new EventEmitter<NglTab>();\n   onDeactivate = new EventEmitter<NglTab>();\n\n  private _active: boolean = false;\n\n  constructor( public templateRef: TemplateRef<any>) {}\n\n  set active(active: boolean) {\n    if (active ===  this._active) return;\n    this._active = active;\n    if (active) {\n      this.onActivate.emit(this);\n    } else {\n      this.onDeactivate.emit(this);\n    }\n  }\n\n  get active(): boolean {\n    return this._active;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngl-tab]',\n  exportAs: 'nglTab',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input, args: ['nglTabId', ] },],\n'heading': [{ type: Input },],\n'onActivate': [{ type: Output },],\n'onDeactivate': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}