import { Directive, Input, TemplateRef, Output, EventEmitter, Optional } from '@angular/core';
/*
 * <ng-template ngl-tab heading="...">
 *    Content goes here...
 * </ng-template>
 */
var NglTab = (function () {
    function NglTab(templateRef) {
        this.templateRef = templateRef;
        this.onActivate = new EventEmitter();
        this.onDeactivate = new EventEmitter();
        this._active = false;
    }
    Object.defineProperty(NglTab.prototype, "active", {
        get: function () {
            return this._active;
        },
        set: function (active) {
            if (active === this._active)
                return;
            this._active = active;
            if (active) {
                this.onActivate.emit(this);
            }
            else {
                this.onDeactivate.emit(this);
            }
        },
        enumerable: true,
        configurable: true
    });
    NglTab.decorators = [
        { type: Directive, args: [{
                    selector: '[ngl-tab]',
                    exportAs: 'nglTab',
                },] },
    ];
    /** @nocollapse */
    NglTab.ctorParameters = function () { return [
        { type: TemplateRef, decorators: [{ type: Optional },] },
    ]; };
    NglTab.propDecorators = {
        'id': [{ type: Input, args: ['nglTabId',] },],
        'heading': [{ type: Input },],
        'onActivate': [{ type: Output },],
        'onDeactivate': [{ type: Output },],
    };
    return NglTab;
}());
export { NglTab };
//# sourceMappingURL=tab.js.map