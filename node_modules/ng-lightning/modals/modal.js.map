{"version":3,"sources":["../../../temp/inline/modals/modal.ts"],"names":[],"mappings":"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","file":"modal.js","sourceRoot":"","sourcesContent":["import {Component, Input, Output, ElementRef, EventEmitter, HostListener, ViewChild, ContentChild} from '@angular/core';\nimport {toBoolean, uniqueId} from '../util/util';\nimport {NglModalFooter} from './footer';\nimport {NglModalHeaderTemplate} from './header';\n\n\nexport class NglModal {\n   header: string = '';\n   size: 'large';\n\n   set directional(directional: string | boolean) {\n    this._directional = toBoolean(directional);\n  }\n  get directional() {\n    return this._directional;\n  }\n\n   closeButton: ElementRef;\n\n  headingId = uniqueId('modal_header');\n\n   set open(_open: any) {\n    _open = toBoolean(_open);\n    if (_open === this.open) return;\n\n    this._open = _open;\n    if (this.open) {\n      setTimeout(() => this.focusFirst());\n    }\n  }\n  get open() {\n    return this._open;\n  }\n\n   openChange = new EventEmitter();\n\n   headerTpl: NglModalHeaderTemplate;\n\n   footer: NglModalFooter;\n\n  private _open: boolean = true;\n  private _directional = false;\n\n  \n  close(evt?: Event) {\n    if (evt) {\n      evt.stopPropagation();\n    }\n    this.openChange.emit(false);\n  }\n\n  focusFirst() {\n    this.closeButton.nativeElement.focus();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngl-modal',\n  template: `\n    <div class=\"slds-modal\" [class.slds-fade-in-open]=\"open\" [ngClass]=\"[size ? 'slds-modal--' + size : '']\" [attr.aria-hidden]=\"!open\" role=\"dialog\" [attr.aria-labelledby]=\"headingId\"><div class=\"slds-modal__container\"><div class=\"slds-modal__header\" [class.slds-modal__header--empty]=\"!header &amp;&amp; !headerTpl\"><button class=\"slds-button slds-button--icon-inverse slds-modal__close\" #closeButton type=\"button\" (click)=\"close()\"><svg class=\"slds-button__icon slds-button__icon--large\" nglIcon=\"close\"></svg><span class=\"slds-assistive-text\">Close</span></button><h2 class=\"slds-text-heading--medium\" *ngIf=\"header\" [id]=\"headingId\">{{header}}</h2><ng-template *ngIf=\"headerTpl\" [ngTemplateOutlet]=\"headerTpl.templateRef\" [ngTemplateOutletContext]=\"{id: headingId}\"></ng-template><ng-content select=\"[tagline]\"></ng-content></div><div class=\"slds-modal__content slds-p-around--medium\"><ng-content select=\"[body]\"></ng-content></div><div class=\"slds-modal__footer\" *ngIf=\"footer\" [class.slds-modal__footer--directional]=\"directional\"><ng-template [ngTemplateOutlet]=\"footer.templateRef\"></ng-template></div></div></div><div tabindex=\"0\" (focus)=\"focusFirst()\"></div><div class=\"slds-backdrop\" [class.slds-backdrop--open]=\"open\"></div>\n  `,\n  host: {\n    'tabindex': '0',\n  },\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'size': [{ type: Input },],\n'directional': [{ type: Input },],\n'closeButton': [{ type: ViewChild, args: ['closeButton', ] },],\n'open': [{ type: Input },],\n'openChange': [{ type: Output },],\n'headerTpl': [{ type: ContentChild, args: [NglModalHeaderTemplate, ] },],\n'footer': [{ type: ContentChild, args: [NglModalFooter, ] },],\n'close': [{ type: HostListener, args: ['keydown.esc', ['$event'], ] },],\n};\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}