import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter, ElementRef, Renderer2 } from '@angular/core';
var NglInternalLookupScope = (function () {
    function NglInternalLookupScope(element, renderer) {
        this.scopeChange = new EventEmitter();
        this.open = false;
        this.openChange = new EventEmitter();
        renderer.addClass(element.nativeElement, 'slds-align-middle');
        renderer.addClass(element.nativeElement, 'slds-m-left--xx-small');
        renderer.addClass(element.nativeElement, 'slds-shrink-none');
    }
    NglInternalLookupScope.prototype.onScopeChange = function (scope) {
        this.scopeChange.emit(scope);
    };
    NglInternalLookupScope.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-internal-lookup-scope',
                    template: "\n    <span nglDropdown [open]=\"open\" (openChange)=\"openChange.emit($event)\"><ng-content></ng-content><button class=\"slds-button slds-button--icon slds-button-space-left slds-shrink-none\" nglDropdownTrigger><svg class=\"slds-button__icon\" nglIconCategory=\"utility\" nglIcon=\"down\"></svg></button><div class=\"slds-dropdown slds-dropdown--left\" *ngIf=\"open\"><ul class=\"dropdown__list\"><li class=\"slds-dropdown__item\" *ngFor=\"let s of scope.scopes\" (click)=\"onScopeChange(s)\" (keydown.Enter)=\"onScopeChange(s)\"><a role=\"menuitem\" nglDropdownItem><ng-template [ngTemplateOutlet]=\"scope.templateRef\" [ngTemplateOutletContext]=\"{ $implicit: s }\"></ng-template></a></li></ul></div></span>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                },] },
    ];
    /** @nocollapse */
    NglInternalLookupScope.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    NglInternalLookupScope.propDecorators = {
        'scope': [{ type: Input },],
        'scopeChange': [{ type: Output },],
        'open': [{ type: Input },],
        'openChange': [{ type: Output },],
    };
    return NglInternalLookupScope;
}());
export { NglInternalLookupScope };
;
//# sourceMappingURL=scope.js.map